{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IntegratorPT12B-main\\\\Client\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./SearchBar.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(props) {\n  _s();\n  const {\n    onSearch\n  } = props;\n  const [id, setId] = useState(\"\");\n  const randomId = () => {\n    const randomId = Math.floor(Math.random() * 625) + 1;\n    onSearch(randomId);\n    setId(\"\");\n  };\n  const onDeleteAll = () => {};\n  const handleChange = e => {\n    setId(e.target.value);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      onSearch(id);\n      setId(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.SearchBar,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: handleChange,\n          onKeyPress: handleKeyPress,\n          value: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            onSearch(id);\n            setId(\"\");\n          },\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: randomId,\n          children: \"Random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SearchBar, \"4S2lHYDXZu1kPqeM+OaM1T6vczM=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["styles","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBar","props","_s","onSearch","id","setId","randomId","Math","floor","random","onDeleteAll","handleChange","e","target","value","handleKeyPress","key","children","className","type","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/IntegratorPT12B-main/Client/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["import styles from \"./SearchBar.module.css\";\nimport { useState } from \"react\";\n\nexport default function SearchBar(props) {\nconst { onSearch} = props;\n\n  const [id, setId] = useState(\"\");\n\n  const randomId = () => {\n    const randomId = Math.floor(Math.random() * 625) + 1;\n    onSearch(randomId);\n    setId(\"\");\n  };\n\n  const onDeleteAll = () => {\n  }\n\n  const handleChange = (e) => {\n    setId(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      onSearch(id);\n      setId(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <div className={styles.SearchBar}>\n          <input\n            type=\"search\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            value={id}\n          />\n          <button\n            onClick={() => {\n              onSearch(id);\n              setId(\"\");\n            }}\n          >\n            Agregar\n          </button>\n          <button onClick={randomId}>Random</button>\n        </div>\n      </div>\n    </>\n  );\n}"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EAEvB,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMA,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC;IACpDN,QAAQ,CAACG,QAAQ,CAAC;IAClBD,KAAK,CAAC,EAAE,CAAC;EACX,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM,CAC1B,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BP,KAAK,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,cAAc,GAAIH,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;MACrBb,QAAQ,CAACC,EAAE,CAAC;MACZC,KAAK,CAAC,EAAE,CAAC;IACX;EACF,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAAoB,QAAA,eACEpB,OAAA;QAAKqB,SAAS,EAAExB,MAAM,CAACM,SAAU;QAAAiB,QAAA,gBAC/BpB,OAAA;UACEsB,IAAI,EAAC,QAAQ;UACbC,QAAQ,EAAET,YAAa;UACvBU,UAAU,EAAEN,cAAe;UAC3BD,KAAK,EAAEV;QAAG;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACV,eACF5B,OAAA;UACE6B,OAAO,EAAEA,CAAA,KAAM;YACbvB,QAAQ,CAACC,EAAE,CAAC;YACZC,KAAK,CAAC,EAAE,CAAC;UACX,CAAE;UAAAY,QAAA,EACH;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACT5B,OAAA;UAAQ6B,OAAO,EAAEpB,QAAS;UAAAW,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACtC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF,iBACL;AAEP;AAACvB,EAAA,CAhDuBF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}