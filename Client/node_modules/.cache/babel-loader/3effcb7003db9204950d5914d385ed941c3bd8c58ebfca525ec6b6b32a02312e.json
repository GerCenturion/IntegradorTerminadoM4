{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\IntegratorPT12B-main\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Commons imports\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n// Styles\nimport './App.css';\n// Componenets\nimport Cards from './components/Cards/Cards';\nimport NavBar from './components/NavBar/NavBar';\nimport About from './components/About/About';\nimport Form from './components/Form/Form';\n// Router-Dom\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport Detail from './components/Detail/Detail';\nimport Favorites from './components/Favorites/Favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst email = '';\nconst password = '';\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const {\n    pathname\n  } = useLocation();\n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false);\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access]);\n\n  // const onSearch = (id) => {\n  //    axios(`http://localhost:3001/rickandmorty/character/${id}`).then(({ data }) => {\n  //       if (data.name) {\n  //          setCharacters((oldChars) => [...oldChars, data]);\n  //       } else {\n  //          window.alert('¡No hay personajes con este ID!');\n  //       }\n  //    });\n  // }\n  const onSearch = async id => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:3001/rickandmorty/character/${id}`);\n      if (data.name) {\n        // setCharacters((oldChars) => [...oldChars, data]);\n        setCharacters([...characters, data]);\n      }\n    } catch (error) {\n      window.alert('¡No hay personajes con este ID!');\n    }\n  };\n  const onClose = id => {\n    setCharacters(characters.filter(char => char.id !== id));\n  };\n\n  // function login(userData) {\n  //    const { email, password } = userData;\n  //    const URL = 'http://localhost:3001/rickandmorty/login/';\n  //    axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\n  //       const { access } = data;\n  //       setAccess(data);\n  //       access && navigate('/home');\n  //    });\n  // }\n\n  async function login(userData) {\n    try {\n      const {\n        email,\n        password\n      } = userData;\n      const URL = 'http://localhost:3001/rickandmorty/login/';\n      const {\n        data\n      } = await axios(URL + `?email=${email}&password=${password}`);\n      const {\n        access\n      } = data;\n      setAccess(data);\n      access && navigate('/home/');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [pathname !== '/' && /*#__PURE__*/_jsxDEV(NavBar, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: '/',\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/home',\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/about',\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/detail/:id',\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/favorites',\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"rL5isSFIIqGVxMgI4WcRzeUB8Hw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Cards","NavBar","About","Form","Routes","Route","useLocation","useNavigate","Detail","Favorites","jsxDEV","_jsxDEV","email","password","App","_s","characters","setCharacters","pathname","navigate","access","setAccess","onSearch","id","data","get","name","error","window","alert","onClose","filter","char","login","userData","URL","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/IntegratorPT12B-main/Client/src/App.js"],"sourcesContent":["// Commons imports\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n// Styles\nimport './App.css';\n// Componenets\nimport Cards from './components/Cards/Cards';\nimport NavBar from './components/NavBar/NavBar';\nimport About from './components/About/About'\nimport Form from './components/Form/Form'\n// Router-Dom\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport Detail from './components/Detail/Detail';\nimport Favorites from './components/Favorites/Favorites';\n\nconst email = '';\nconst password = '';\n\n\nfunction App() {\n   const [characters, setCharacters] = useState([]);\n   const { pathname } = useLocation()\n   const navigate = useNavigate();\n   const [access, setAccess] = useState(false);\n\n\n   useEffect(() => {\n      !access && navigate('/');\n   }, [access]);\n\n   // const onSearch = (id) => {\n   //    axios(`http://localhost:3001/rickandmorty/character/${id}`).then(({ data }) => {\n   //       if (data.name) {\n   //          setCharacters((oldChars) => [...oldChars, data]);\n   //       } else {\n   //          window.alert('¡No hay personajes con este ID!');\n   //       }\n   //    });\n   // }\n   const onSearch = async (id) => {\n      try {\n         const { data } = await axios.get(`http://localhost:3001/rickandmorty/character/${id}`)\n         if (data.name) {\n            // setCharacters((oldChars) => [...oldChars, data]);\n            setCharacters([...characters, data]);\n         }\n\n      } catch (error) {\n         window.alert('¡No hay personajes con este ID!');\n      }\n   }\n\n   const onClose = (id) => {\n      setCharacters(characters.filter((char) => char.id !== id))\n   }\n\n   // function login(userData) {\n   //    const { email, password } = userData;\n   //    const URL = 'http://localhost:3001/rickandmorty/login/';\n   //    axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\n   //       const { access } = data;\n   //       setAccess(data);\n   //       access && navigate('/home');\n   //    });\n   // }\n\n   async function login(userData) {\n      try {\n         const { email, password } = userData;\n         const URL = 'http://localhost:3001/rickandmorty/login/';\n         const { data } = await axios(URL + `?email=${email}&password=${password}`)\n         const { access } = data;\n         setAccess(data);\n         access && navigate('/home/');\n      } catch (error) {\n         console.log(error)\n      }\n   }\n\n\n   return (\n      <div className='App'>\n         {\n            pathname !== '/' && <NavBar onSearch={onSearch} />\n         }\n\n         <Routes>\n            <Route path={'/'} element={<Form login={login} />} />\n            <Route path={'/home'} element={<Cards characters={characters} onClose={onClose} />} />\n            <Route path={'/about'} element={<About />} />\n            <Route path={'/detail/:id'} element={<Detail />} />\n            <Route path={'/favorites'} element={<Favorites />} />\n         </Routes>\n      </div>\n\n   );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}